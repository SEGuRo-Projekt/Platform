---
version: "3.9"

services:
  minio:
    image: minio/minio:RELEASE.2023-04-28T18-11-17Z
    command: server
      --address ":9000"
      --console-address ":9001"
      --ftp="address=:2021"
      --ftp="passive-port-range=30000-40000"
      --sftp="address=:2022"
      --sftp="ssh-private-key=/keys/ssh_host_rsa_key"
      /data

      # --ftp="tls-private-key=path/to/private.key"
      # --ftp="tls-public-cert=path/to/public.crt"

    environment:
    - MINIO_ROOT_USER=${S3_USER}
    - MINIO_ROOT_PASSWORD=${S3_PASSWORD}
    ports:
    - target: 9000
      published: 9000
      protocol: tcp
      mode: host
    - target: 9001
      published: 9001
      protocol: tcp
      mode: host
    - target: 2021
      published: 2021
      protocol: tcp
      mode: host
    - target: 2022
      published: 2022
      protocol: tcp
      mode: host
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 20s
      retries: 3
      start_period: 20s
    volumes:
    - type: bind
      source: ./data/minio/
      target: /data/
    - type: bind
      source: ./data/keys
      target: /keys

  minio-setup:
    build:
      context: ./images/minio-setup
    depends_on:
    - minio
    env_file:
    - .env
    entrypoint: python /setup.py
    environment:
    - MINIO_ROOT_USER=${S3_USER}
    - MINIO_ROOT_PASSWORD=${S3_PASSWORD}
    volumes:
    - type: bind
      source: ./etc/minio/setup.py
      target: /setup.py
    - type: bind
      source: ./data/keys
      target: /keys

  mosquitto:
    image: eclipse-mosquitto:2
    volumes:
    - type: bind
      source: ./etc/mosquitto/
      target: /mosquitto/config/
    - type: bind
      source: ./log/mosquitto/
      target: /mosquitto/log/
    - type: bind
      source: ./data/mosquitto/
      target: /mosquitto/data/
    ports:
    - target: 1883
      published: 1883
      protocol: tcp
      mode: host
    healthcheck:
      test: ["CMD", "mosquitto_sub", "-p", "1880", "-t", "$$SYS/#", "-C", "1", "-i", "healthcheck", "-W", "3"]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 10s

  yacht:
    image: selfhostedpro/yacht
    container_name: yacht
    restart: unless-stopped
    ports:
      - 8000:8000
    volumes:
      - ./data/yacht:/config
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - PUID=0
      - PGID=0
      - COMPOSE_DIR=/compose

  registry:
    restart: always
    image: registry:2
    ports:
    - protocol: tcp
      mode: host
      published: 5001
      target: 5001
    volumes:
    - type: bind
      source: ./data/registry
      target: /var/lib/registry
    - type: bind
      source: ./etc/registry
      target: /etc/docker/registry
    - type: bind
      source: ./data/keys
      target: /keys

  registry-ui:
    image: joxit/docker-registry-ui:latest
    ports:
    - protocol: tcp
      target: 80
      published: 8080
    environment:
    - REGISTRY_TITLE=SEGuRo Private Docker Registry
    - REGISTRY_URL=http://localhost:5001
    - SINGLE_REGISTRY=true
    - DELETE_IMAGES=true
    - SHOW_CONTENT_DIGEST=true
    - THEME=light
    depends_on:
    - registry
